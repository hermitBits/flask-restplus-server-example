name: Workflow - Security Check and Tests

on:
  workflow_dispatch:

jobs:
  security-code:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}

      - name: Current branch
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          echo "Current branch: $BRANCH_NAME"
    
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r deploy/requirements.txt
      
      - name: Run Safety
        run: |
          safety check --output text > output-safety.txt

      - name: Run bandit
        if: always()
        run: |
          bandit -r . -f html > output-bandit.html
        
      - name: Save results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: output-result-security
          path: |
            output-bandit.html
            output-safety.txt

  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.7]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      
      - name: Current branch
        run: |
          BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
          echo "Current branch: $BRANCH_NAME"
          
      - name: Set PYTHONPATH
        run: |
          echo "PYTHONPATH=." >> $GITHUB_ENV
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install project
        run: |
          python -m pip install --upgrade pip
          pip install -r tasks/requirements.txt
          pip install -r tests/requirements.txt
          pip install markupsafe==2.0.1 --force-reinstall
          pip install SQLAlchemy==1.3.24
          invoke app.dependencies.install
      
      - name: Run tests
        run: pytest --junit-xml=test-results.xml
      
      - name: Surface failing tests
        if: always()
        uses: pmeier/pytest-results-action@main
        with:
          path: test-results.xml
          summary: true
          display-options: fEX
          fail-on-empty: true